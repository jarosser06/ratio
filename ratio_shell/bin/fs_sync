#!/bin/bash

# fs_sync - Sync _fs directory to Ratio installation with direct 1:1 mapping
# Place this script in ~/.rto/shell/bin/ to use as a custom Ratio Shell command

set -e  # Exit on any error

# Configuration
FS_SOURCE="_fs"
RATIO_DEST="ratio:/"
AGENT_FILE_PERMS="755"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Function to show usage
show_usage() {
    echo "Usage: fs_sync [OPTIONS]"
    echo ""
    echo "Sync _fs directory to Ratio installation with direct 1:1 mapping"
    echo "Maps _fs/* directly to ratio:/* (e.g., _fs/agents/aws/file.agent -> ratio:/agents/aws/file.agent)"
    echo ""
    echo "Options:"
    echo "  --source PATH     Source directory to sync (default: _fs)"
    echo "  --dest PATH       Destination path in Ratio (default: ratio:/)"
    echo "  --force           Overwrite existing files"
    echo "  --dry-run         Show what would be done without making changes"
    echo "  --verbose         Show detailed progress"
    echo "  --cleanup         Remove incorrectly created _fs directory from ratio root"
    echo "  --help            Show this help message"
    echo ""
    echo "The script will:"
    echo "  - Sync all files with 644 permissions (except agent files get 755)"
    echo "  - Create directories with 755 permissions"
    echo "  - Exclude .gitkeep files"
    echo "  - Ensure run directory exists"
    echo "  - Use efficient bulk sync operation"
}

# Parse command line arguments
FORCE=""
DRY_RUN=""
VERBOSE=""

while [[ $# -gt 0 ]]; do
    case $1 in
        --source)
            FS_SOURCE="$2"
            shift 2
            ;;
        --dest)
            RATIO_DEST="$2"
            shift 2
            ;;
        --force)
            FORCE="--force"
            shift
            ;;
        --verbose)
            VERBOSE="--verbose"
            shift
            ;;
        --help)
            show_usage
            exit 0
            ;;
        *)
            print_error "Unknown option: $1"
            show_usage
            exit 1
            ;;
    esac
done

# Check if source directory exists
if [ ! -d "$FS_SOURCE" ]; then
    print_error "Source directory '$FS_SOURCE' not found"
    print_error "Make sure you're running this from the repository root or specify --source"
    exit 1
fi

print_status "Starting Ratio filesystem sync"
print_status "Source: $FS_SOURCE"
print_status "Destination: $RATIO_DEST"
print_status "Direct mapping: $FS_SOURCE/* â†’ ${RATIO_DEST}*"

# Build common rto sync arguments
COMMON_ARGS="--recursive --max-depth=10"

if [ -n "$FORCE" ]; then
    COMMON_ARGS="$COMMON_ARGS $FORCE"
fi

if [ -n "$VERBOSE" ]; then
    COMMON_ARGS="$COMMON_ARGS $VERBOSE"
fi

# Step 1: Sync each top-level item from _fs to ratio root individually
print_status "Syncing _fs contents to Ratio root (direct 1:1 mapping)..."

# Sync each top-level directory/file individually to ensure correct mapping
# This maps _fs/agents -> ratio:/agents, _fs/run -> ratio:/run, etc.
pushd "$FS_SOURCE" &> /dev/null

rto sync $COMMON_ARGS * "$RATIO_DEST"

print_success "Filesystem sync completed successfully!"

print_status "Setting agent file permissions..."

agent_files=$(find . -type f -name "*.agent")

for agent_file in $agent_files; do
    # Get the relative path for the agent file
    full_path=${agent_file#.}

    # Sync the agent file with specific permissions
    print_status "Setting executable permissions for: $full_path"

    rto chmod 755 "$full_path"
done

popd &> /dev/null

print_success "Agents all set to executable permissions!"